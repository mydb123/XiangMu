<template>
  <!-- <div>
        状态2.
        合伙人上传图纸页面
  </div>-->
  <div class="drawing_upload_design_partner">
    <DesignStepComponent :index="index"></DesignStepComponent>
    <el-form :model="formData" :rules="rules" ref="formData">
    <div>
      <div class="div2">
        <div class="content">
          <el-row>
            <el-col :span="5">
              <p>项目名称</p>
            </el-col>
            <el-col :span="8">
              <el-input v-model="formData.name" placeholder="请输入内容" :readonly="readonly"></el-input>
            </el-col>
            <el-col :span="5">
              <p>状态</p>
            </el-col>
            <el-col :span="6">
              <el-input v-model="statusText" placeholder="请输入内容" :readonly="readonly"></el-input>
            </el-col>
          </el-row>
        </div>
      </div>
      <div class="wordborder">
        <p class="clickbox" v-on:click="click(1)">清单信息</p>
        <div class="content" v-show="show1">
          <el-row>
            <el-col :span="5">
              <p>电子版图纸</p>
            </el-col>
            <el-col :span="17">
              <el-upload
                class="upload-demo"
                action
                :http-request="uploadFileMethod"
                list-type="text" :file-list="uploadFile.electronic" :on-remove="handleRemove">
                <el-button size="medium" type="primary" style="width:200px;">电子版图纸上传</el-button>
              </el-upload>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>智能化图纸</p>
            </el-col>
            <el-col :span="17">
              <el-upload
                class="upload-demo"
                action
                :http-request="uploadFileMethod2"
                list-type="text" :file-list="uploadFile.intelligent" :on-remove="handleRemove"
              >
                <el-button size="medium" type="primary" style="width:200px;">智能化图纸上传</el-button>
              </el-upload>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>装饰效果图</p>
            </el-col>
            <el-col :span="17">
              <el-upload
                class="upload-demo"
                action
                :http-request="uploadFileMethod3"
                list-type="text" :file-list="uploadFile.decoration" :on-remove="handleRemove"
              >
                <el-button size="medium" type="primary" style="width:200px;">装饰效果图上传</el-button>
              </el-upload>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>施工清单</p>
            </el-col>
            <el-col :span="17">
              <el-upload
                class="upload-demo"
                action
                :http-request="uploadFileMethod4"
                list-type="text" :file-list="uploadFile.report" :on-remove="handleRemove"
              >
                <el-button size="medium" type="primary" style="width:200px;">项目可研报告上传</el-button>
              </el-upload>
            </el-col>
          </el-row>
        </div>
      </div>
      <div class="wordborder">
        <p class="clickbox" v-on:click="click(1)">设计需求</p>
        <div class="content" v-show="show2">
          <el-row>
            <el-col :span="5">
              <p>设计成果</p>
            </el-col>
            <el-col :span="7">
              <el-form-item prop="designSubmitResult">
              <el-input v-model="formData.designSubmitResult" placeholder="请输入内容"></el-input>
              </el-form-item>
            </el-col>
            <el-col :span="5">
              <p>成果提交方式</p>
            </el-col>
            <el-col :span="7">
              <el-form-item prop="designSubmitMode">
              <el-input v-model="formData.designSubmitMode" placeholder="请输入内容"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>提交时间</p>
            </el-col>
            <el-col :span="7">
               <el-date-picker
                                v-model="formData.designSubmitTime"
                                type="date"
                                value-format="yyyy-MM-dd"
                                :readonly="readonly">
                            </el-date-picker>
            </el-col>
            <el-col :span="5">
              <p>成果提交介质</p>
            </el-col>
            <el-col :span="7">
              <el-form-item prop="designSubmitMedium">
              <el-input v-model="formData.designSubmitMedium" placeholder="请输入内容"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>基础智能化系统范围</p>
            </el-col>
            <el-col :span="19">
              <el-form-item prop="baseSystemScope">
              <el-input v-model="formData.baseSystemScope" placeholder="请输入内容"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>业务智能化系统范围</p>
            </el-col>
            <el-col :span="19">
              <el-form-item prop="businessSystemScope">
              <el-input v-model="formData.businessSystemScope" placeholder="请输入内容"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="5">
              <p>其他要求</p>
            </el-col>
            <el-col :span="19">
              <el-form-item prop="otherRequire">
              <el-input v-model="formData.otherRequire" placeholder="请输入内容"></el-input>
              </el-form-item>
            </el-col>
          </el-row>
        </div>
      </div>
    </div>
    <div class="div5">
      <el-button @click="submit('formData')" type="primary" round>提交</el-button>
    </div>
    </el-form>
  </div>
</template>

<script>
import DesignStepComponent from "@/components/DesignStepComponent";
import api from "@/api/index";
export default {
  components: {
    DesignStepComponent
  },
  data() {
    return {
      readonly: true,
      index: 2,
      show1: true,
      show2: true,
      statusText: "立项通过，待上传图纸",
      formData: {
        id: "",
        name: "", //项目名称
        designSubmitResult: "", //设计成果
        designSubmitMode: "", //成果提交方式
        designSubmitTime: new Date(), //提交时间
        designSubmitMedium: "", //成果提交介质
        baseSystemScope: "", //基础智能化系统范围
        businessSystemScope: "", //业务智能化系统范围
        otherRequire: "", //其他要求
        status: 20, //状态
        operator: sessionStorage.getItem("user"), //操作人
        userName: sessionStorage.getItem("user") //日志操作人
      },
      rules: {
        designSubmitResult: [
          { required: true, message: "请输入设计成果", trigger: "blur" }
        ],
        designSubmitMode: [
          { required: true, message: "请输入成果提交方式", trigger: "blur" }
        ],
        designSubmitMedium: [
          { required: true, message: "请输入成果提交介质", trigger: "blur" }
        ],
        baseSystemScope: [
          {
            required: true,
            message: "请输入基础智能化系统范围",
            trigger: "blur"
          }
        ],
        businessSystemScope: [
          {
            required: true,
            message: "请输入业务智能化系统范围",
            trigger: "blur"
          }
        ],
        otherRequire: [
          { required: true, message: "请输入其他要求", trigger: "blur" }
        ]
      },
      uploadFile: {
        //文件列表
        electronic: [],
        intelligent: [],
        decoration: [],
        report: []
      }
    };
  },
  methods: {
    click(index) {
      if (index == 1) {
        this.show1 = !this.show1;
      } else if (index == 2) {
        this.show2 = !this.show2;
      }
    },
    uploadFileMethod(param) {
      let fileObject = param.file;
      let formData = new FormData();
      formData.append("file", fileObject);
      formData.append("id", this.formData.id);
      formData.append("fileType", 0); //电子版图纸
      formData.append("operator", this.formData.operator);
      formData.append("userName", this.formData.userName);
      api.designPartner
        .uploadFile(formData)
        .then(response => {
          let obj = new Object();
          obj.id = response.id;
          obj.name = response.showName;
          obj.url = response.url;
          this.uploadFile.electronic.push(obj);
        })
        .catch(error => {
          console.log(error);
        });
    },
    uploadFileMethod2(param) {
      let fileObject = param.file;
      let formData = new FormData();
      formData.append("file", fileObject);
      formData.append("id", this.formData.id);
      formData.append("fileType", 1); //智能化图纸
      formData.append("operator", this.formData.operator);
      formData.append("userName", this.formData.userName);
      api.designPartner
        .uploadFile(formData)
        .then(response => {
          let obj = new Object();
          obj.id = response.id;
          obj.name = response.showName;
          obj.url = response.url;
          this.uploadFile.intelligent.push(obj);
        })
        .catch(error => {
          console.log(error);
        });
    },
    uploadFileMethod3(param) {
      let fileObject = param.file;
      let formData = new FormData();
      formData.append("file", fileObject);
      formData.append("id", this.formData.id);
      formData.append("fileType", 2); //装饰效果图
      formData.append("operator", this.formData.operator);
      formData.append("userName", this.formData.userName);
      api.designPartner
        .uploadFile(formData)
        .then(response => {
          let obj = new Object();
          obj.id = response.id;
          obj.name = response.showName;
          obj.url = response.url;
          this.uploadFile.decoration.push(obj);
        })
        .catch(error => {
          console.log(error);
        });
    },
    uploadFileMethod4(param) {
      let fileObject = param.file;
      let formData = new FormData();
      formData.append("file", fileObject);
      formData.append("id", this.formData.id);
      formData.append("fileType", 3); //项目可研报告
      formData.append("operator", this.formData.operator);
      formData.append("userName", this.formData.userName);
      api.designPartner
        .uploadFile(formData)
        .then(response => {
          let obj = new Object();
          obj.id = response.id;
          obj.name = response.showName;
          obj.url = response.url;
          this.uploadFile.report.push(obj);
        })
        .catch(error => {
          console.log(error);
        });
    },
    download() {},
    handleRemove(file, fileList) {
      console.log(file.id);
      api.designPartner
        .deleteFile(file.id)
        .then(response => {
          console.log(response);
        })
        .catch(error => {
          console.log(error);
        });
    },
    loadData(id) {
      api.designPartner
        .findById(id)
        .then(response => {
          this.formData.name = response.name; //项目名称
        })
        .catch(error => {
          console.log(error);
        });
    },
    submit(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          api.designPartner.saveDesignDrawing(this.formData).then(response => {
            if (!response) {
              this.$message.success("提交成功");
              this.$router.push(
                "/design/partner/drawingReview"
              );
            } else {
              this.$message.error("提交失败");
            }
          });
        } else {
          this.$message("请检查输入是否正确");
          return false;
        }
      });
    },
    loadFileElectronic() {
      //加载上传的电子版图纸附件
      api.designPartner
        .loadFile(this.formData.id, 0)
        .then(response => {
          response.forEach(element => {
            let obj = new Object();
            obj.id = element.id;
            obj.name = element.showName;
            obj.url = element.url;
            this.uploadFile.electronic.push(obj);
          });
        })
        .catch(error => {
          console.log(error);
        });
    },
    loadFileIntelligent() {
      //智能化图纸附近
      api.designPartner
        .loadFile(this.formData.id, 1)
        .then(response => {
          response.forEach(element => {
            let obj = new Object();
            obj.id = element.id;
            obj.name = element.showName;
            obj.url = element.url;
            this.uploadFile.intelligent.push(obj);
          });
        })
        .catch(error => {
          console.log(error);
        });
    },
    loadFileDecoration() {
      //装饰化图纸
      api.designPartner
        .loadFile(this.formData.id, 2)
        .then(response => {
          response.forEach(element => {
            let obj = new Object();
            obj.id = element.id;
            obj.name = element.showName;
            obj.url = element.url;
            this.uploadFile.decoration.push(obj);
          });
        })
        .catch(error => {
          console.log(error);
        });
    },
    loadFileList() {
      //项目可研报告
      api.designPartner
        .loadFile(this.formData.id, 3)
        .then(response => {
          response.forEach(element => {
            let obj = new Object();
            obj.id = element.id;
            obj.name = element.showName;
            obj.url = element.url;
            this.uploadFile.report.push(obj);
          });
        })
        .catch(error => {
          console.log(error);
        });
    }
  },
  mounted: function() {
    this.formData.id = this.$route.query.id; //获取路由传值
    this.loadData(this.formData.id); //加载数据
    this.loadFileElectronic();
    this.loadFileIntelligent();
    this.loadFileDecoration();
    this.loadFileList();
  }
};
</script>

<style lang='scss'>
.drawing_upload_design_partner {
  margin: 10px auto;
  border: 1px solid #e7e8ed;
  .div2 {
    position: relative;
    margin: 25px;
    min-height: 20px;
    line-height: 40px;
    .content {
      width: 80%;
      margin: 35px;
      margin-left: 50px;
      p {
        padding: 0px 5px;
        margin: 0px 10px;
      }
    }
  }
  .div5 {
    text-align: center;
    margin-bottom: 20px;
  }
}
</style>