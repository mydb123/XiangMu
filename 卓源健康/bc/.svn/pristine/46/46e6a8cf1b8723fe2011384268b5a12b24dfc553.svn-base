<template>
    <div id="addPreparation">
        <el-breadcrumb>
            <el-breadcrumb-item :to="{ path: '/workbench/dataCoding/CodeList'}">附加功能</el-breadcrumb-item>
            <el-breadcrumb-item :to="{ path: '/workbench/dataCoding/print'}">编码列表</el-breadcrumb-item>
            <el-breadcrumb-item >新增打印</el-breadcrumb-item>
        </el-breadcrumb>
    <el-card>    
        <div class="box">
            <p class='clickbox' v-on:click="click(1)">新增打印</p>
            <div class='content' v-show="show1">
                <el-form :model="formData" :rules="rules"  ref="">
                    <el-row>
                        <el-col :span="4"><p>起始编码</p></el-col>
                        <el-col :span="8">
                            <el-form-item prop="start">
                                <el-input class="w260" v-model="formData.start">
                                    <template slot="prepend">{{Prefix.start}}</template>
                                </el-input>
                            </el-form-item>
                        </el-col> 
                        <el-col :span="4"><p>结束编码</p></el-col>
                        <el-col :span="8">
                            <el-form-item prop="end">
                                <el-input class="w260" v-model="formData.end">
                                    <template slot="prepend">{{Prefix.start}}</template>
                                </el-input>
                            </el-form-item>
                        </el-col> 
                    </el-row>
                </el-form>
            </div>
        </div>
        <div class='tac'>
            <el-button  @click="save(formData)" type="primary" round>提交</el-button>
        </div>
        </el-card>
    </div>    
</template>

<script>
import qs from 'qs' // 根据需求是否导入qs模块

import { provinceAndCityData, regionData, provinceAndCityDataPlus, regionDataPlus, CodeToText, TextToCode } from 'element-china-area-data';
import api from '@/api/index';
export default {
    data(){
             // 验证开始
        var startve = (rule,value,cb) =>{
            const pattern = /^\d{4}$/
            if(pattern.test(value)){
                return cb()
            }
            cb(new Error('最少输入4个数字'))
        }
        // // 验证结束
        var end = (rule,value,cb) =>{
            if(value<formData.start){
                return cb 
            }
            cb(new Errror('请输入大于起始的编码'))
        };
        return{ 
            readonly: true,
            show1:true,
            templateRadio:'',
            formData:{
                start:0,
                end:0
            },
            Prefix:{
                start:"ZY"+new Date().getFullYear().toString().slice(2,4),
                end:"ZY"+new Date().getFullYear().toString().slice(2,4),
            },
            rules:{
                start: [
                    { required: true, message: '数字不能为空',trigger:'blur'},
                    // { type: 'number', message: '请输入必须为数字'},
                    { validator: startve, trigger:'blur'}
                ],
                ends:[
                    { required: true, message: '数字不能为空',trigger:'blur'},
                    // { type: 'number', message: '数字必须为数字值',trigger:'blur'},
                    { validator:end, trigger:'blur'}
                ]
            }
        }},
    methods:{
        click(index) {
            if (index == 1) {
                this.show1 = !this.show1;
            }
        },
        save(formData){
            api.product.save(formData).then(res=>{
                console.log(res)
                if(res.state==200){
                    this.$router.push({
                        path:"",
                        query:{formData:formData}
                    })
                }
           })
            // this.$router.push({
            //     path: "/workbench/raw/rawDetailInspection",
            //     query: { formData: formData }
            // });
        },

    },
    created(){
        
    }
}
</script>

<style lang='scss'>
#addPreparation{
       .mb20{
        margin-bottom: 20px;
    }
    .tac{
        text-align: center;
        .el-button{
            width: 114px;
            height: 50px;
        } 
    }
}
</style>